{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "tawbazehaf@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Revokes all tokens for the authenticated user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/cars": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Get a list of all rentals",
                "operationId": "1fd4f1fdc0da258c5084bcdce4bbe693",
                "responses": {
                    "200": {
                        "description": "A list of rentals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rental"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cars"
                ],
                "summary": "Store a new car",
                "operationId": "6f519ab2c9767d4d3b1be7cf8f1287ed",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "company",
                                    "model",
                                    "license_plate",
                                    "price_per_day"
                                ],
                                "properties": {
                                    "company": {
                                        "type": "string",
                                        "example": "Toyota"
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "Corolla"
                                    },
                                    "license_plate": {
                                        "type": "string",
                                        "example": "ABC1234"
                                    },
                                    "price_per_day": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Car created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cars/{car}": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Show a specific car",
                "operationId": "68c5b9f0863fbcdb57ea5b16ffd7ffa5",
                "parameters": [
                    {
                        "name": "car",
                        "in": "path",
                        "description": "Car ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A specific car",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Cars"
                ],
                "summary": "Update a specific car",
                "operationId": "f4dbe64fb6b12478ff8b31e123af6955",
                "parameters": [
                    {
                        "name": "car",
                        "in": "path",
                        "description": "Car ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "make",
                                    "model",
                                    "year",
                                    "price_per_day"
                                ],
                                "properties": {
                                    "make": {
                                        "type": "string"
                                    },
                                    "model": {
                                        "type": "string"
                                    },
                                    "year": {
                                        "type": "integer"
                                    },
                                    "price_per_day": {
                                        "type": "number",
                                        "format": "float"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Car not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cars"
                ],
                "summary": "Delete a specific car",
                "operationId": "28c41b6ccebfcfbda05ea7272e62c4c4",
                "parameters": [
                    {
                        "name": "car",
                        "in": "path",
                        "description": "Car ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Car deleted successfully"
                    },
                    "404": {
                        "description": "Car not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/selectCars": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Filter cars by company and model",
                "operationId": "5fd647fd91ed19cbab2b80d957a9e925",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "description": "Company name to filter by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "Model name to filter by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered cars list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Car"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No cars found matching the criteria"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cars/filter": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Filter cars",
                "description": "Filter cars by optional query parameters like mark, model, year, color, or price.",
                "operationId": "a35aa12cbe3af8db5a84314371b3d872",
                "parameters": [
                    {
                        "name": "mark",
                        "in": "query",
                        "description": "Car mark",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Toyota"
                        }
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "Car model",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Corolla"
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Car year",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2022"
                        }
                    },
                    {
                        "name": "color",
                        "in": "query",
                        "description": "Car color",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Blue"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Filter by price (less than or equal to)",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": "20000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered list of cars"
                    }
                }
            }
        },
        "/api/payments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get a list of all rentals",
                "operationId": "826dc6b24dd704607aa018a59207dd96",
                "responses": {
                    "200": {
                        "description": "A list of rentals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rental"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Store a new payment",
                "description": "Create a new payment entry",
                "operationId": "storePayment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rental_id",
                                    "amount",
                                    "method",
                                    "status"
                                ],
                                "properties": {
                                    "rental_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100.5
                                    },
                                    "method": {
                                        "type": "string",
                                        "example": "cash"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "completed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/payments/{id}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Show a specific payment",
                "description": "Retrieve a specific payment by ID",
                "operationId": "showPayment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Payments"
                ],
                "summary": "Update a payment",
                "description": "Update payment details",
                "operationId": "updatePayment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "method",
                                    "status"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100.5
                                    },
                                    "method": {
                                        "type": "string",
                                        "example": "Credit Card"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "Completed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Payments"
                ],
                "summary": "Delete a payment",
                "description": "Delete a specific payment by ID",
                "operationId": "deletePayment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/payments/rental/{rental_id}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get payment by rental ID",
                "description": "Get the payment for a specific rental by rental_id.",
                "operationId": "2474eb8a25ea6f420decd1328c0faf59",
                "parameters": [
                    {
                        "name": "rental_id",
                        "in": "path",
                        "description": "ID of the rental to fetch payment for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment details for the rental",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found for the rental ID"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/payments/user/{user_id}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get all payments made by a user through their rentals",
                "operationId": "5d18be8d74dcca3a8b2a5133377121aa",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user to fetch payments for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of payments made by the user through rentals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Payment"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No payments found for the user"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/rentals": {
            "get": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Get a list of all rentals",
                "operationId": "a19748eac97c416a4a02a73fbcdb4700",
                "responses": {
                    "200": {
                        "description": "A list of rentals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rental"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Store a new rental",
                "description": "Create a new rental entry",
                "operationId": "storeRental",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "car_id",
                                    "start_date",
                                    "end_date",
                                    "total_amount",
                                    "status"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "car_id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-03-15"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-03-20"
                                    },
                                    "total_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 250.75
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "Confirmed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Rental created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Rental created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/rentals/{id}": {
            "get": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Show a specific rental",
                "description": "Retrieve a specific rental by ID",
                "operationId": "showRental",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Rental ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rental details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rental not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Update a rental",
                "description": "Update rental details",
                "operationId": "updateRental",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Rental ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "start_date",
                                    "end_date",
                                    "total_amount",
                                    "status"
                                ],
                                "properties": {
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-03-15"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-03-20"
                                    },
                                    "total_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 250.75
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "Confirmed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rental updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Rental updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rental not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Delete a rental",
                "description": "Delete a specific rental by ID",
                "operationId": "deleteRental",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Rental ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rental deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Rental deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rental not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Car": {
                "required": [
                    "company",
                    "model",
                    "license_plate",
                    "price_per_day"
                ],
                "properties": {
                    "id": {
                        "description": "The car's unique ID",
                        "type": "integer"
                    },
                    "company": {
                        "description": "The company that makes the car",
                        "type": "string"
                    },
                    "model": {
                        "description": "The model of the car",
                        "type": "string"
                    },
                    "license_plate": {
                        "description": "The unique license plate of the car",
                        "type": "string"
                    },
                    "price_per_day": {
                        "description": "Price per day for renting the car",
                        "type": "number",
                        "format": "float"
                    },
                    "created_at": {
                        "description": "The time when the car was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "The time when the car was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Payment": {
                "required": [
                    "rental_id",
                    "amount",
                    "method",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "rental_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 150
                    },
                    "method": {
                        "type": "string",
                        "enum": [
                            "credit_card",
                            "paypal",
                            "cash"
                        ],
                        "example": "credit_card"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "failed"
                        ],
                        "example": "completed"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-03-15T12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-03-15T12:00:00"
                    }
                },
                "type": "object"
            },
            "Rental": {
                "title": "Rental",
                "description": "Rental model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "car_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-03-15"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-03-20"
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 250
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "cancelled"
                        ],
                        "example": "pending"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-03-10T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-03-10T12:00:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Cars",
            "description": "Cars"
        },
        {
            "name": "Payments",
            "description": "Payments"
        },
        {
            "name": "Rentals",
            "description": "Rentals"
        }
    ]
}